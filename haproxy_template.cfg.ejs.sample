global
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  chroot /var/lib/haproxy
  daemon
  maxconn 4096
  stats timeout 30s
  stats socket /tmp/haproxy.status.sock mode 660 level admin
  user haproxy
  group haproxy

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL).
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

  defaults
    log global
    mode http
    option httplog
    option dontlognull
    option redispatch
    retries 3
    maxconn 2000
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

  listen stats :1936
    mode http
    stats enable
    stats uri /
    stats refresh 2s
    stats realm Haproxy\ Stats
    # Change the username and password here!
    stats auth user:letmein

  frontend incoming
    bind *:80
    reqadd X-Forwarded-Proto:\ http
    mode http
    # use Access Control Lists to filter
    # the connections through to the
    # correct backends.
    acl web hdr_dom(host) -i example.com
    use_backend web if web

  frontend incoming_ssl
    bind *:8443 accept-proxy
    reqadd X-Forwarded-Proto:\ https
    mode http
    # use Access Control Lists to filter
    # the connections through to the
    # correct backends.
    acl web hdr_dom(host) -i example.com
    use_backend web if web

# For each service, build a backend definition
<% services.forEach(function(service) { %>
  backend <%= service %> :80
    mode http
    # List all the available nodes, and the 
    # port their service runs on
    <% backends[service].forEach(function(node) { %>
    server <%= node['node'] + ' ' + node['ip'] + ':' + node['port'] %>
    <% }); %>
<% }); %>

